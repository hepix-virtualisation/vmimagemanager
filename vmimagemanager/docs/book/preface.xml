<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
    "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
<!ENTITY % sharedents SYSTEM "shared-entities.xml" >
%sharedents;
]>


  <!-- TODO: this should be autogenerated! -->
  <?dbhtml filename="index.shtml"?>
  <preface id="preface">
  <?dbhtml dir="preface"?>
  <!-- TODO: this should be autogenerated! -->
  <?dbhtml filename="index.shtml"?>
    <title>Preface</title>


    <para>
      &vmim; is a python script for managing a small cluster of libvirt virtual machines on a single host with one command using the unix command line interface.
it is intended for scripted VM manipulation, by automating the task of launching and shutting down virtual machine images mounting the VM file systems, extracting artifacts, inserting artifacts, snappshotting and restoring images.for virtualizing Operating systems which has been useful at work in High through put server deployment.
Vmimagemanager was originally writern for Xen prior to 0.1.0 when it was ported to libvirt controlling kvm in the future it may support more open platforms including xen, kvm and virtual box.
The user interface was designed to complement the xm series of commands, but will be extended since xm commands are xen specific.
virt-manager is can be used along side vmimagemanager, and complement each other, virtmanger of one off work vmimagemanager for clusters.
So far its optimized for repeatedly restarting a Virtual Machine slot with a reset image, with one command line.
    </para>

    <para>     
      Features of &vmim; are:
      <itemizedlist>
        <listitem><para>Works with Kvm through libvirt.</para></listitem>
        <listitem><para>Works with local storage.</para></listitem>
        <listitem><para>Simple Slot and Virtual Machine model of deployment.</para></listitem>
        <listitem><para>Slot configuration, and Host configuration defaulting so you only need to specifiy the image directory once.</para></listitem>
        <listitem><para>Speeds the import and export of images to tgz or rsync directories for archive.</para></listitem>
        <listitem><para>Retrive artifacts or Insert artifacts into the files system, (eg, cirtificates=x509, keys=ssh,apache)</para></listitem>
        <listitem><para>Speedy frequent redeploys with rsync.</para></listitem>
        <listitem><para>Extracting or Overlaying Archived Directories images.</para></listitem>
        <listitem><para>Defaults and per Slot configuration.</para></listitem>
        <listitem><para>Manages mounting domains when then Vm is down and un-mounting when the domain is launched.</para></listitem>
        <listitem><para>Manages exporting images in tar.gz format.</para></listitem>
        <listitem><para>Lists Free Slots.</para></listitem>
        <listitem><para>Libvirt gives support can be extended to work with the Xen hypervisor on Linux and Solaris hosts. On Linux QEMU, KVM, LXC, OpenVZ, User Mode Linux, and VirtualBox.</para></listitem>
      </itemizedlist>
      Limitations of &vmim; are:
      <itemizedlist>
        <listitem><para>Only works with libvirt kvm at the moment.</para></listitem>
        <listitem><para>Only works with local storage at the moment.</para></listitem>
        <listitem><para>Image Extraction and insertion work when each VM has a RAW virtual disk that can be read with kpartx.</para></listitem>
        <listitem><para>Image Extraction and insertion work when each VM has is a block device, for forthcoming feature to support Xen Para-Virtualization. (Hard disk partition or LV)</para></listitem>
        <listitem><para>Works with xfs/ext3 at the moment and maybe others.</para></listitem>
        <listitem><para>Requires work on mis-configured systems.</para></listitem>
        <listitem><para>Only Tested on Debian Lenny and Sid, Fedora and Scientific Linux (Red Hat Enterprise Linux binary compatible.)</para></listitem>
      </itemizedlist>
    </para>

    <section id="preface-model">
      <title>Model</title>
      <para>Virtualization hosts will run a fixed number of "Slots" upon which Virtual Machines can be started, 
      The rational of this is based on the work of many groups in HTC (High Throughput Computing (1)) it seems 
      that the number of jobs per host is at best N+1:N proportional to the CPU/cores's. This varies with IO 
      jobs and CPU requirements for the job. Secure services require certificates, secure automatic certificate 
      generation seemed to complex. On this reasoning the slot and virtual machine model was used, since the idea 
      of a Host . This script is never going to be a complete solution to virtualisation on a batch queue Jobs that
      require low latency communication and highly multi threaded optimized might be better suited waiting for 
      virtualization in these areas.</para>
    </section>
    <section id="preface-performance">
      <title>Performance</title>
      <para>In testing timings for shutting down, rsync reinstalling and rebooting a standard a vanilla Scientific Linux 
      (Red Hat Enterprise Linux binary compatible OS) where in the region of 30-40 seconds for SL3 and 40-50 seconds for 
      SL4, your performance may vary, at home I also run a ultra portable laptop which with slower USB attached hard 
      drives that cant reach near this I/O performance so shutdown, rsync, bootup can at around 70-80 seconds, Im sure 
      with appropriate (and user friendly error handling) , the performance of bootup would still dominate execution time 
      even with enhancements like upstart in ubuntu.
      </para>
      <para>Virtulization penalties in seem to lie in disk IO. (todo: ref HEPIX talks) for Xen, and KVM. Multi core CPU 
      performance may be enhanced, thier are no convincing explinations for this phenominum yet. I have seen next to 
      zero data on virtualized network latency delay for KVM or Xen, but bandwith of Xen seems near native, and KVM has 
      slight outband overhead, but inbound network connectivitiy is native.</para>
      <section>
        <title>Notes</title>
        <itemizedlist>
          <listitem><para>HTC and HPC:High performance Computing became well defined and included low latency communication (2) between different computer CPU's, and through this definition came the need to define High Throughput Computing, which differs in the amount of synchronization operations the computers need to perform.</para></listitem>
          <listitem><para>Xen used to increase TCP connections over ethernet latency by 60us for its bridge, if addressed by a low latency networking standard or potentially a PCI-E bus sharing system native speed should suitable for HPC job platform isolation as well.</para></listitem>          
        </itemizedlist>
      </section>
    </section>
    <section id="preface-roadmap">
      <title>Roadmap</title>
      <para>The current roadmap for @vmim;.</para>
      <itemizedlist>
        <listitem><para>vmimagemanger should always work along side other virtulization tools.</para></listitem>
        <listitem><para>vmimanager is ment to be part of things. vmimagemanger will never be a complete solution for virtulization with x509 certificate generation and network management such as Cloud computing, but rather something that makes writing such a system easy.</para></listitem>
        <listitem><para>To be as user friendly as possible, while making a simple command line interface to Virtulization of KVM and in the future regain Xen compatibility on Linux.</para></listitem>        
        <listitem><para>This script is also intended to be placed on an LHC worker node along with SGE (sun grid engine).</para></listitem>
        <listitem><para>vmimagemanger may extend its self to support iSCSI,virtualbox, Solaris, but stability and functionality will be placed before diversity of platforms.</para></listitem>
        <listitem><para>The batch queue integration scripts may need a separate source forge project, and hopefully will be completely rewritten, as they are at the moment not intelligent.</para></listitem>        
        <listitem><para>Other Plans include a platform application flexible virtulization abstraction for a build system, so that software projects can build rpm's or debian debs easily with virtual build servers and so trace build ability bugs. (such a think exists already for debian.).</para></listitem>
      </itemizedlist>
    </section>
    <section id="preface-why">
      <title>Why use vmimagemanager script to manage virtual machines ?</title>
      <itemizedlist>
        <listitem><para>Useful for off line backing up virtual machine systems, extracting and inserting directories, and reseting the operating system, using rsync, just the sort of thing that you might do on a batch queue to run jobs in virtual machines, destroying and reinstalling virtual machines to test for installation bugs on complex server applications.</para></listitem>
        <listitem><para>This script is a simple script, and is meant to be useful and user friendly and save time doing the sort of thing you need to do with virtual maschines when you have one virtual server.</para></listitem>
        <listitem><para>This tool was writern to be combined with the xm tools from xen and depends on them and complements them until a better solution for end users comes.</para></listitem>
        <listitem><para>This tool is also meant to be used by other automation tools, such as automated build and testing set ups, where simplicity of managing virtual machine slots for your own scripts is a priority not a gui.</para></listitem>
      </itemizedlist>
    </section>
    <section id="preface-requirements">
      <title>Minimum System Requirements?</title>
      <para>
        For minimal test installation:
        <itemizedlist>
          <listitem><para>Hardware: contemporary CPU , 1 GiB of RAM , 100 MiB free harddisk space</para></listitem>
          <listitem><para>Software: libvirt managed virtulisation layer.</para></listitem>
        </itemizedlist>
        Recomended test instalation:
        <itemizedlist>
          <listitem><para>Software: LVM installed.</para></listitem>
          <listitem><para>Software: KVM.</para></listitem>
          <listitem><para>Software: virt-manager installed and working.</para></listitem>
        </itemizedlist>
      </para>
      <para> 
        If you wish to setup a &vmim; and have specific requirements for &vmim; or just dificulty settign it up please 
        read this manual and contact &vmim-support;.
      </para>
    </section>

    <section id="preface-help">
      <title>Looking for help?</title>
      <para>This part gets you all the help that you might need:</para>
      <itemizedlist>
        <listitem>
          <para>To get the latest release:
            <itemizedlist>
	          <listitem>
                <para>&vmim-download;</para>
	          </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>For latest development code:</para>
          <itemizedlist>
            <listitem>&vmim-rcs-hg;</listitem>
            <listitem>&vmim-rcs-svn;</listitem>
            
          </itemizedlist>
        </listitem>
      </itemizedlist>


    </section>

  </preface>
